"""Ubah Semua Tabel

Revision ID: efd53ce09b1c
Revises: 3542905b25da
Create Date: 2025-08-19 23:13:47.722528

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'efd53ce09b1c'
down_revision = '3542905b25da'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('stock', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tables',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event_tables',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('table_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('AVAILABLE', 'BOOKED', 'UNAVAILABLE', name='eventtablestatus'), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['table_id'], ['tables.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('event_id', 'table_id', name='_event_table_uc')
    )
    op.create_table('reservations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('event_table_id', sa.Integer(), nullable=False),
    sa.Column('invoice_id', sa.String(length=36), nullable=True),
    sa.Column('number_of_guests', sa.Integer(), nullable=False),
    sa.Column('total_amount', sa.Integer(), nullable=False),
    sa.Column('payment_status', sa.Enum('PENDING', 'PAID', 'FAILED', 'EXPIRED', name='paymentstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['event_table_id'], ['event_tables.id'], ),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('invoice_id')
    )
    op.create_table('order_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reservation_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('subtotal', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['reservation_id'], ['reservations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.add_column(sa.Column('description', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('start_time', sa.Time(), nullable=False))
        batch_op.add_column(sa.Column('end_time', sa.Time(), nullable=False))
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=False))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('event_date',
               existing_type=mysql.DATETIME(),
               type_=sa.Date(),
               existing_nullable=False)

    with op.batch_alter_table('invoices', schema=None) as batch_op:
        batch_op.alter_column('status',
               existing_type=mysql.VARCHAR(length=50),
               type_=sa.Enum('PENDING', 'PAID', 'EXPIRED', name='invoicestatus'),
               existing_nullable=False)
        batch_op.drop_constraint(batch_op.f('invoices_ibfk_1'), type_='foreignkey')
        batch_op.drop_column('event_id')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('users_ibfk_1'), type_='foreignkey')
        batch_op.drop_column('admin_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('admin_id', mysql.VARCHAR(length=40), nullable=True))
        batch_op.create_foreign_key(batch_op.f('users_ibfk_1'), 'users', ['admin_id'], ['id'])

    with op.batch_alter_table('invoices', schema=None) as batch_op:
        batch_op.add_column(sa.Column('event_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
        batch_op.create_foreign_key(batch_op.f('invoices_ibfk_1'), 'events', ['event_id'], ['id'])
        batch_op.alter_column('status',
               existing_type=sa.Enum('PENDING', 'PAID', 'EXPIRED', name='invoicestatus'),
               type_=mysql.VARCHAR(length=50),
               existing_nullable=False)

    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.alter_column('event_date',
               existing_type=sa.Date(),
               type_=mysql.DATETIME(),
               existing_nullable=False)
        batch_op.drop_column('created_at')
        batch_op.drop_column('is_active')
        batch_op.drop_column('end_time')
        batch_op.drop_column('start_time')
        batch_op.drop_column('description')

    op.drop_table('order_items')
    op.drop_table('reservations')
    op.drop_table('event_tables')
    op.drop_table('tables')
    op.drop_table('products')
    # ### end Alembic commands ###
